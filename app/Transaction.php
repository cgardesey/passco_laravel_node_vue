<?php

namespace App;

use App\Events\TransactionResponseEvent;
use Illuminate\Database\Eloquent\Model;
//use Illuminate\Support\Facades\Redis;

use Redis;

class Transaction extends Model
{
    protected $guarded = ['id'];

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function getRouteKeyName()
    {
        return 'paymentid';
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::updated(function ($transaction) {

//            $transaction->user->update(
//                ['timeremaining' => (int)$transaction->owner->timeremaining + (int)$transaction->time]
//            );

            $columns = $transaction->getDirty();

            foreach ($columns as $column => $newValue) {

                if ($column === 'message') {
                    event(new TransactionResponseEvent($transaction));
//                    $redis = Redis::connection();
//                    $redis->publish('message',json_encode($transaction));

//                    Redis::publish('message', json_encode($transaction));
                }
            }
//            $message = $transaction->transactionsuccessful;
//
//            $redis = Redis::connection();
//            $redis->publish('message',json_encode($message));
        });
    }
}
